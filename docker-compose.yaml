version: "3"

services:
  api:
    container_name: api
    environment:
      - PORT=5000
      - ORIGIN=https://www.development.com/
      - MONGO_RS_CONNECTION=mongo0:27017,mongo1:27017,mongo2:27017
      - MONGO_RS=mongo_rs
      - REDIS_HOST=redis
    ports:
      - 5000:5000
      - 9229:9229
    build: .
    volumes:
      - .:/app
      - /app/node_modules/
    command: npm run start:dev
    depends_on:
      - mongosetup
      - redis
    networks:
      - blog

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    extra_hosts:
      - "localhost:162.242.195.82"
    restart: always
    networks:
      - blog

  mongosetup:
    image: mongo:4.0-xenial
    entrypoint: ["bash", "/scripts/mongo_setup.sh"]
    environment:
      - PORT=27017
    depends_on:
      - mongo0
      - mongo1
      - mongo2
    volumes:
      - .:/scripts
    networks:
      - mongo-cluster
    restart: "no"
  mongo0:
    hostname: mongo0
    container_name: mongo_rs0
    image: mongo:4.0-xenial
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    expose:
      - 27017
    networks:
      - mongo-cluster
      - blog
    restart: always
  mongo1:
    hostname: mongo1
    container_name: mongo_rs1
    image: mongo:4.0-xenial
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    expose:
      - 27017
    networks:
      - mongo-cluster
      - blog
    restart: always
  mongo2:
    hostname: mongo2
    container_name: mongo_rs2
    image: mongo:4.0-xenial
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    expose:
      - 27017
    networks:
      - mongo-cluster
      - blog
    restart: always

networks:
  blog:
    driver: bridge
  mongo-cluster:
